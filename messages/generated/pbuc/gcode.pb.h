/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_GCODE_GCODE_PB_H_INCLUDED
#define PB_GCODE_GCODE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _gcode_command_opcode { 
    gcode_command_opcode_HOME = 0, 
    gcode_command_opcode_MOVE = 1, 
    gcode_command_opcode_ABSOLUTE_POSITION = 2, 
    gcode_command_opcode_LOAD_TIP = 3, 
    gcode_command_opcode_CHECK_TIP_PRESSENCE = 4 
} gcode_command_opcode;

/* Struct definitions */
typedef struct _gcode_command { 
    gcode_command_opcode op; 
    bool has_arg;
    int32_t arg; 
} gcode_command;


/* Helper constants for enums */
#define _gcode_command_opcode_MIN gcode_command_opcode_HOME
#define _gcode_command_opcode_MAX gcode_command_opcode_CHECK_TIP_PRESSENCE
#define _gcode_command_opcode_ARRAYSIZE ((gcode_command_opcode)(gcode_command_opcode_CHECK_TIP_PRESSENCE+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define gcode_command_init_default               {_gcode_command_opcode_MIN, false, 0}
#define gcode_command_init_zero                  {_gcode_command_opcode_MIN, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define gcode_command_op_tag                     1
#define gcode_command_arg_tag                    2

/* Struct field encoding specification for nanopb */
#define gcode_command_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    op,                1) \
X(a, STATIC,   OPTIONAL, INT32,    arg,               2)
#define gcode_command_CALLBACK NULL
#define gcode_command_DEFAULT NULL

extern const pb_msgdesc_t gcode_command_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define gcode_command_fields &gcode_command_msg

/* Maximum encoded size of messages (where known) */
#define gcode_command_size                       13

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
